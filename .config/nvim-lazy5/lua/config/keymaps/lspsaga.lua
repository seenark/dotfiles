local map = require("config.keymaps.mapFn")

-- LspSaga
map("n", "<leader>k", "<cmd>Lspsaga hover_doc<CR>", { desc = "LspSaga hover" })
map("n", "K", "<cmd>Lspsaga hover_doc<CR>", { desc = "LspSaga hover" })
map("n", "<leader>cs", "<cmd>Lspsaga outline<CR>", { desc = "LspSaga outline" })
map("n", "[d", "<cmd>Lspsaga diagnostic_jump_prev<CR>", { desc = "LspSaga diagnostic jump prev" })
map("n", "<leader>cdp", "<cmd>Lspsaga diagnostic_jump_prev<CR>", { desc = "LspSaga diagnostic jump prev" })
map("n", "]d", "<cmd>Lspsaga diagnostic_jump_next<CR>", { desc = "LspSaga diagnostic jump next" })
map("n", "<leader>cdn", "<cmd>Lspsaga diagnostic_jump_next<CR>", { desc = "LspSaga diagnostic jump next" })
map("n", "<leader>cdb", "<cmd>Lspsaga show_buf_diagnostics<CR>", { desc = "LspSaga Show buffer diagnostics" })
map("n", "[e", function()
  require("lspsaga.diagnostic"):goto_prev({ severity = vim.diagnostic.severity.ERROR })
end, { desc = "Diagnostic jump with filters such as only jumping prev to an error" })
map("n", "]e", function()
  require("lspsaga.diagnostic"):goto_next({ severity = vim.diagnostic.severity.ERROR })
end, { desc = "Diagnostic jump with filters such as only jumping next to an error" })
map("n", "<leader>cdw", "<cmd>Lspsaga show_workspace_diagnostics<CR>", { desc = "Show workspace diagnostics" })
